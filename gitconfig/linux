# Git Credential handlers with GitHub/GLab CLI
[credential "https://github.com"]
	helper = !gh auth git-credential
[credential "https://gitlab.com"]
	helper = !glab auth git-credential
[credential "https://gitlab.alpinelinux.org"]
	helper = !glab auth git-credential
[credential "https://salsa.debian.org"]
	helper = !glab auth git-credential
[credential "https://mau.dev"]
	helper = !glab auth git-credential
# User config
[user]
	email = ajhalili2006@gmail.com
	name = Andrei Jiroh Eugenio Halili
	signingkey = A30EBE40AD856D88
        #editor = code --wait
#[merge]
#    tool = vscode
#[mergetool "vscode"]
#    cmd = code --wait $MERGED
#[diff]
#    tool = vscode
#[difftool "vscode"]
#    cmd = code --wait --diff $LOCAL $REMOTE

# Commit settings
[commit]
	gpgsign = true

# Enforce SSH
# We commented thus block out coz we use the GitHub CLI's Git Credential
# helper stuff
#[url "git@github.com:"]
#  insteadOf = https://github.com/
#  pushInsteadOf = https://github.com/
[url "git+ssh://ajhalili2006@git.launchpad.net/"]
  insteadof = lp:
  pushInsteadOf = lp:
[url "git@bitbucket.org:"]
  insteadOf = https://bitbucket.org/
[init]
  defaultBranch = main
# TODO: Set up aliases for ther Git hosts, like in Launchpad.net

# aliases
[alias]
    #change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f"
    signoff = "commit --signoff"
    ammend = "commit --amend"
    stage = "add"
    unstage = "restore --staged"
    stats = "status"
    sdiff = !git diff && git submodule foreach 'git diff'
    spush = push --recurse-submodules=on-demand
    supdate = submodule update --remote --merge
    skipCi = push -o ci.skip
    root = rev-parse --show-toplevel

# LFS
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

# pull
[pull]
	rebase = true
[push]
	recurseSubmodules = check
